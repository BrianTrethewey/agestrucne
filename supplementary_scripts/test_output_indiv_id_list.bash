#!/bin/bash
#For testing that the indiv list  output to stderr under debub3 by pgdriveneestimator.py correctly gives
#the indiv ids for  the indivs listed in the intermediate genepop file also written by pgdriveneestimator.py

numargs=3
mys=$( basename $0 )

if [ "$#" -ne "$numargs" ]
then
	echo "usage: $mys <genepop file> <pop number> <perc indiv sample>"
	exit 0
fi

myf="$1"
mypop="$2"
myperc="$3"


#removes current pgdriveneestimator.py intermediates

rm *_g_*
rm *indiv.table

#we grap the 2nd pop, all loci, 1-year-olds, a random 50 percent of them
python ../pgdriveneestimator.py -f ${myf} -s "cohortsperc" -p "id;sex;father;mother;age,float;int;float;float;float,1;${myperc}" \
				-m 1 -a 100 -r 2-2 -e 0.01 -c 1 -l none -i none -g 1-100 -x 100  -d debug3 > pgdrive.out 2>pgdrive.err

#get the ids for those in the genepop file generated by pgdriveneestimator.py
pgres=$( grep -v "^l\|pop" 50_bot_161011_r1_genepop_h_c_r_0_g_2 | cut -f 1 -d "," | cut -f 1 -d ";" | sort -n )

#get the list of indiv indices output to stderr under debug3
myl=$( cut -f 5 pgdrive.err )

#get the ids using bash script, compare them to the ids as output above
bashres=$( ../supplementary_scripts/select_indiv_from_genepop_by_indices.bash 50.bot.161011.r1.genepop $myl 2  | grep -v "^l\|pop" | cut -f 1 -d "," | cut -f 1 -d ";" | sort -n )

echo ${pgres} | awk '{ myids=myids $0 "," }END{  sub( /,$/, "", myids ); print "pg ids: " myids }' 1>&2
echo ${bashres} | awk '{ myids=myids $0 "," }END{  sub( /,$/, "", myids ); print "bash ids: " myids }' 1>&2

if [ "$pgres" == "$bashres" ]
then
	echo "ids match"
else
	echo "ids don't match"
fi
